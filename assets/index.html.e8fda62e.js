import{_ as n,o as s,c as a,d as p}from"./app.12b3c3fb.js";const t={},o=p(`<h3 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE\uFF1A</h3><p>\u7ED9\u5B9A\u4E0D\u540C\u9762\u989D\u7684\u786C\u5E01 coins \u548C\u4E00\u4E2A\u603B\u91D1\u989D amount\u3002\u7F16\u5199\u4E00\u4E2A\u51FD\u6570\u6765\u8BA1\u7B97\u53EF\u4EE5\u51D1\u6210\u603B\u91D1\u989D\u6240\u9700\u7684\u6700\u5C11\u7684\u786C\u5E01\u4E2A\u6570\u3002\u5982\u679C\u6CA1\u6709\u4EFB\u4F55\u4E00\u79CD\u786C\u5E01\u7EC4\u5408\u80FD\u7EC4\u6210\u603B\u91D1\u989D\uFF0C\u8FD4\u56DE \xA0-1\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>**\u8F93\u5165:**coins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">5</span><span class="token punctuation">]</span>, amount <span class="token operator">=</span> <span class="token number">11</span>
**\u8F93\u51FA:**3
**\u89E3\u91CA:** <span class="token number">11</span> <span class="token operator">=</span> <span class="token number">5</span> + <span class="token number">5</span> + <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u610F\u89E3\u6790\uFF1A \u6709\u4E00\u5806\u4E0D\u540C\u9762\u989D\u7684\u786C\u5E01\uFF0C\u95EE\u6700\u5C11\u53D6\u591A\u5C11\u679A\u786C\u5E01\uFF0C\u53EF\u4EE5\u51D1\u591F\u60F3\u8981\u7684\u9762\u503C\u3002</p><h3 id="dfs-\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#dfs-\u89E3\u6790" aria-hidden="true">#</a> DFS \u89E3\u6790\uFF1A</h3><p><a href="https://leetcode.com/problems/coin-change/discuss/77416/Python-11-line-280ms-DFS-with-early-termination-99-up" target="_blank" rel="noopener noreferrer">Coin Change - LeetCode</a></p><ol><li>\u4E3A\u4E86\u6700\u7EC8\u786C\u5E01\u6570\u91CF\u6700\u5C11\uFF0C\u9996\u5148\u5BF9\u786C\u5E01\u9762\u503C\u4ECE\u5927\u5230\u5C0F\u6392\u5E8F <ul><li>\u56E0\u4E3A\u9762\u503C\u5927\u7684\u8D8A\u9760\u524D\uFF0C\u6700\u540E\u6240\u9700\u989D\u5EA6\u4E5F\u4F1A\u76F8\u5E94\u51CF\u5C0F\uFF0C\u786C\u5E01\u6570\u91CF\u4E5F\u4F1A\u51CF\u5C11</li></ul></li><li>\u6784\u5EFA DFS \u51FD\u6570 <ul><li>\u786E\u5B9A\u8FB9\u754C\uFF0C\u82E5\u4E0D\u5B58\u5728\u76EE\u6807\u91D1\u989D\uFF0C\u5219\u8FD4\u56DE\u5F53\u524D\u6700\u5C0F\u503C</li><li>\u904D\u5386\u786C\u5E01\u9762\u503C\uFF1A \u82E5\u5B58\u5728\u5F53\u524D\u786C\u5E01\u9762\u503C\u5C0F\u4E8E\u7B49\u4E8E\u76EE\u6807\u91D1\u989D\u4E14\u76EE\u6807\u91D1\u989D\u5C0F\u4E8E\u8FB9\u754C\u6761\u4EF6\uFF08\u9632\u6B62\u6EA2\u51FA\uFF09\uFF0C\u5219 drill down\uFF0C\u8FDB\u5165\u4E0B\u4E00\u5C42\u5FAA\u73AF\u5BFB\u627E\u5269\u4F59\u91D1\u989D\u6240\u9700\u786C\u5E01</li></ul></li><li>\u8BBE\u7F6E\u76EE\u6807\u91D1\u989D\uFF0C\u904D\u5386\u786C\u5E01\u9762\u503C\uFF0C\u6C42\u89E3</li></ol><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">coinChange</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> coins<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">:</span>
    coins<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
    coins_len<span class="token punctuation">,</span> self<span class="token punctuation">.</span>result <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>coins<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">float</span><span class="token punctuation">(</span>\u201Cinf\u201D<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> target<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> target<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>res <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>res<span class="token punctuation">,</span> count<span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> coins_len<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> coins<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> target <span class="token operator">&lt;</span> coins<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>result<span class="token operator">-</span>count<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># if hope still exists</span>
                dfs<span class="token punctuation">(</span>i<span class="token punctuation">,</span> target<span class="token operator">-</span>coins<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> count<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>coins_len<span class="token punctuation">)</span><span class="token punctuation">:</span>
        dfs<span class="token punctuation">(</span>i<span class="token punctuation">,</span> amount<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> self<span class="token punctuation">.</span>result <span class="token keyword">if</span> self<span class="token punctuation">.</span>result <span class="token operator">&lt;</span> <span class="token builtin">float</span><span class="token punctuation">(</span>\u201Cinf\u201D<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token operator">-</span><span class="token number">1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u526A\u679D" tabindex="-1"><a class="header-anchor" href="#\u526A\u679D" aria-hidden="true">#</a> \u526A\u679D</h3><p>\u4E0A\u9762\u65B9\u5F0F\u904D\u5386\u8FC7\u7A0B\u4E2D\u5E76\u4E0D\u9700\u8981\u5168\u90E8\u904D\u5386\u5168\u90E8\u7ED3\u679C\uFF0C\u53EF\u4EE5\u901A\u8FC7\u526A\u679D\uFF0C\u53BB\u9664\u591A\u4F59\u7684\u9009\u9879\uFF1A</p><ol><li>\u540C\u4E0A\u5BF9\u786C\u5E01\u9762\u503C\u6392\u5E8F\uFF08\u4ECE\u5927\u5230\u5C0F\uFF09</li><li>\u6784\u5EFA countCoins \u51FD\u6570\uFF1A <ul><li>\u8BBE\u7F6E\u91D1\u989D\u4E0A\u9650\u53CA\u786C\u5E01\u4E0A\u9650\uFF0C\u82E5\u5F53\u524D\u91D1\u989D\u5927\u4E8E\u76EE\u6807\u91D1\u989D\u5219\u8FD4\u56DE</li><li>\u6C42\u6A21\uFF0C\u9488\u5BF9\u5F53\u524D\u786C\u5E01\u548C\u76EE\u6807\u91D1\u989D\u53D6\u6A21\uFF0C\u82E5\u6EE1\u8DB3\u6761\u4EF6\u5373\u8868\u793A\u5F53\u524D\u7684 coin \u53EF\u4EE5\u5C06\u76EE\u6807\u91D1\u989D\u586B\u6EE1\uFF0C\u53EA\u9700\u8981\u8BA1\u7B97 coins \u5373\u53EF</li><li>\u904D\u5386\u76EE\u6807\u91D1\u989D\uFF0C\u4ECE\u5927\u81F3\u5C0F\uFF0C\u4F9D\u6B21\u9012\u51CF 1\uFF1A \u82E5\u5B58\u5728\u76EE\u6807\u91D1\u989D\u4E0E\u5BF9\u5E94\u9762\u503C\u7684\u786C\u5E01\u5339\u914D\u7684\u60C5\u51B5\uFF08\u6C42\u6A21\uFF09\uFF0C\u5219\u5C06\u786C\u5E01\u8BB0\u5F55\u4E0B\u6765</li></ul></li><li>\u9488\u5BF9\u76EE\u6807\u91D1\u989D\u904D\u5386\u6C42\u503C\u5373\u53EF</li></ol><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> math
<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">coinChange</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> coins<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> amount<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
        coins<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
        coins_len<span class="token punctuation">,</span> result <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>coins<span class="token punctuation">)</span><span class="token punctuation">,</span> amount <span class="token operator">+</span> <span class="token number">1</span>

        <span class="token keyword">def</span> <span class="token function">countCoins</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> target<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> count <span class="token operator">+</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>target<span class="token operator">/</span>coins<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> result<span class="token punctuation">:</span>
                <span class="token keyword">return</span>

            <span class="token keyword">if</span> target <span class="token operator">%</span> coins<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
                result <span class="token operator">=</span> count <span class="token operator">+</span> target<span class="token operator">//</span>coins<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
                <span class="token keyword">return</span>

            <span class="token keyword">if</span> index <span class="token operator">==</span> coins_len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span>
            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>target<span class="token operator">//</span>coins<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                countCoins<span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> target <span class="token operator">-</span> coins<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token operator">*</span>i<span class="token punctuation">,</span> count<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>

        countCoins<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> amount<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">if</span> result <span class="token operator">&gt;</span> amount <span class="token keyword">else</span> result
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bfs-\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#bfs-\u89E3\u6790" aria-hidden="true">#</a> BFS \u89E3\u6790</h3><p><a href="https://leetcode.com/problems/coin-change/discuss/77361/Fast-Python-BFS-Solution" target="_blank" rel="noopener noreferrer">Coin Change - LeetCode</a></p><ol><li>\u5C06\u95EE\u9898\u8F6C\u5316\u4E3A\u6C42 X \u8F74 0 \u70B9\u5230\u5750\u6807\u70B9 amount \u7684\u6700\u77ED\u8DDD\u79BB</li></ol><p>\uFF08\u6BCF\u6B21\u5411\u524D\u884C\u8FDB\u7684\u5408\u6CD5\u8DDD\u79BB\u4E3A coin \u7684\u9762\u503C\uFF09 2. visited = [False]*(amount+1) \u6784\u5EFA\u6570\u7EC4\uFF0C\u5B58\u653E\u540E\u7EED\u904D\u5386\u7684\u8282\u70B9 3. \u548C DFS \u7C7B\u4F3C\uFF0C\u5148\u904D\u5386\u5BF9\u5E94\u786C\u5E01\u7684\u9762\u503C \u5728\u8FD9\u4E2A\u8FC7\u7A0B\u4E2D\uFF0C\u8BA1\u7B97\u5F53\u524D\u786C\u5E01\u9762\u503C\u4E0E\u5DF2\u6709\u786C\u5E01\u7684\u548C\u96C6\uFF0C\u6BD4\u8F83\u5F53\u524D\u91D1\u989D\u548C\u76EE\u6807\u91D1\u989D\u7684\u5DEE\u5F02\uFF08\u76F8\u7B49\u5219\u8FD4\u56DE\u5E76\u8BB0\u5F55\u786C\u5E01\uFF0C\u8D85\u8FC7\u76EE\u6807\u91D1\u989D\u5219\u653E\u5F03\uFF0C\u4E0D\u5904\u7406\uFF09 \u82E5 \u5F53\u524D\u91D1\u989D\u4E0D\u5728\u5DF2\u8BBF\u95EE\u8FC7\u7684\u6570\u7EC4\u4E2D\uFF0C\u5219\u5C06\u5F53\u524D\u91D1\u989D\u6DFB\u52A0\u81F3\u5DF2\u8BBF\u95EE\u8FC7\u7684\u6570\u7EC4\u4E2D 4. \u8FD4\u56DE\u904D\u5386\u540E\u7684\u7ED3\u679C</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">coinChange</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> coins<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> amount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token number">0</span>
        value1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        value2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        nc <span class="token operator">=</span>  <span class="token number">0</span>
        visited <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">(</span>amount<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
        visited<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">while</span> value1<span class="token punctuation">:</span>
            nc <span class="token operator">+=</span> <span class="token number">1</span>
            <span class="token keyword">for</span> v <span class="token keyword">in</span> value1<span class="token punctuation">:</span>
                <span class="token keyword">for</span> coin <span class="token keyword">in</span> coins<span class="token punctuation">:</span>
                    newval <span class="token operator">=</span> v <span class="token operator">+</span> coin
                    <span class="token keyword">if</span> newval <span class="token operator">==</span> amount<span class="token punctuation">:</span>
                        <span class="token keyword">return</span> nc
                    <span class="token keyword">elif</span> newval <span class="token operator">&gt;</span> amount<span class="token punctuation">:</span>
                        <span class="token keyword">continue</span>
                    <span class="token keyword">elif</span> <span class="token keyword">not</span> visited<span class="token punctuation">[</span>newval<span class="token punctuation">]</span><span class="token punctuation">:</span>
                        visited<span class="token punctuation">[</span>newval<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>
                        value2<span class="token punctuation">.</span>append<span class="token punctuation">(</span>newval<span class="token punctuation">)</span>
            value1<span class="token punctuation">,</span> value2 <span class="token operator">=</span> value2<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u52A8\u6001\u89C4\u5212\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212\u89E3\u6790" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212\u89E3\u6790\uFF1A</h3><p><a href="https://leetcode.com/problems/coin-change/discuss/77372/Clean-dp-python-code" target="_blank" rel="noopener noreferrer">Coin Change - LeetCode</a></p><ol><li>\u9996\u5148\u58F0\u660E\u4E00\u4E2A\u5927\u5C0F\u4E3A amount+1 \u7684\u6570\u7EC4 dp\uFF0C\u7528 dp[i]\u5B58\u50A8\u201D\u5BF9\u4E8E\u91D1\u989D amount \u6700\u5C11\u7528\u5230\u7684\u786C\u5E01\u6570 coins\u201D <ul><li>\u4E3A\u4EC0\u4E48\u5927\u5C0F\u662F amount+1\uFF1F\u6BD4\u5982 amount \u662F 11 \u5757\uFF0Cdp \u8981\u4ECE 0 \u5143\u5F00\u59CB\u5B58\u50A8\u5230 11 \u5757\uFF0C\u6240\u4EE5\u6570\u7EC4\u7684\u5927\u5C0F\u8981 amount+1</li><li>\u5BF9\u4E8E\u521D\u59CB\u5316\u6570\u7EC4 dp \u7684\u7D22\u5F15 i=0 \u7684\u5143\u7D20\u503C\u4E3A 0\uFF0C\u662F\u56E0\u4E3A 0 \u5757\u8981\u7684\u786C\u5E01\u6570\u4E3A 0\uFF0C\u6240\u4EE5\u521D\u59CB\u5316\u4E3A 0</li></ul></li><li>\u6839\u636E\u6570\u7EC4 dp \u7684\u5B9A\u4E49\uFF0C\u5F97\u5230\u65B9\u7A0B: dp[i] = min(dp[i-coin]+1) \u6CE8\u610F\uFF1Adp[i-coin]\u7684 coin \u662F\u9488\u5BF9\u6BCF\u4E00\u79CD\u786C\u5E01</li><li>\u8FD4\u56DE\u503C <ul><li>dp[amount]\u8FD4\u56DE dp \u6570\u7EC4\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0Cdp[amount] == float(\u201Cinf\u201D)\u8FD4\u56DE dp \u6570\u7EC4\u6700\u540E\u7684\u5143\u7D20\u662F\u5426\u4E3A inf(\u65E0\u7A77\u5927)</li><li>\u8FD9\u91CC\u7528\u4E00\u4E2A\u4F8B\u5B50\u89E3\u91CA[3, -1][True]\u8FD4\u56DE\u7684\u662F\u7D22\u5F15\u4E3A 1 \u7684\u5143\u7D20\uFF0C[3, -1][False]\u8FD4\u56DE\u7D22\u5F15\u4E3A 0 \u7684\u5143\u7D20</li><li>\u6240\u4EE5 dp[amount]\u4E0D\u7B49\u4E8E inf \u5219\u8FD4\u56DE dp[amount]\uFF0C\u7B49\u4E8E inf \u5219\u8FD4\u56DE-1\uFF0C\u610F\u5473\u7740\u4EFB\u4F55\u4E00\u79CD\u786C\u5E01\u7EC4\u5408\u80FD\u7EC4\u6210\u603B\u91D1\u989D</li></ul></li></ol><p>time: O(amount*len(coins) \u7B2C\u4E00\u5C42\u5FAA\u73AF\u904D\u5386\u4E86 amount \u6B21\uFF0C\u7B2C\u4E8C\u5C42\u5FAA\u73AF\u904D\u5386\u4E86\u6570\u7EC4 coins \u7684\u6BCF\u4E2A\u5143\u7D20 space: O(amount) \u7B97\u6CD5\u7528\u4E00\u4E2A\u5927\u5C0F\u4E3A amount+1 \u7684\u6570\u7EC4\u6765\u5B58\u50A8\u503C</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">coinChange</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> coins<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> amount<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
        dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">(</span>\u201Cinf\u201D<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">*</span> amount
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> amount <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">[</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> c<span class="token punctuation">]</span> <span class="token keyword">if</span> i <span class="token operator">-</span> c <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token builtin">float</span><span class="token punctuation">(</span>\u201Cinf\u201D<span class="token punctuation">)</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> coins<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>

        <span class="token keyword">return</span> <span class="token punctuation">[</span>dp<span class="token punctuation">[</span>amount<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>dp<span class="token punctuation">[</span>amount<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token builtin">float</span><span class="token punctuation">(</span>\u2018inf\u2019<span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0A\u65B9\u5F0F\u53EF\u4EE5\u8F6C\u6362\u5982\u4E0B\u901A\u4FD7\u7684\u65B9\u5F0F\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">coinChange</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> coins<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> amount<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
        n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>coins<span class="token punctuation">)</span>
        <span class="token comment"># dp[i]\u8868\u793A\u91D1\u989Damount\u9700\u8981\u7684\u6700\u5C11coins\u6570</span>
        dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">&quot;inf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>amount<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>amount<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> coins<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> i<span class="token punctuation">:</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token operator">-</span>coins<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> dp<span class="token punctuation">[</span>amount<span class="token punctuation">]</span> <span class="token keyword">if</span> dp<span class="token punctuation">[</span>amount<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> amount <span class="token keyword">else</span> <span class="token operator">-</span><span class="token number">1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24),e=[o];function c(l,i){return s(),a("div",null,e)}var k=n(t,[["render",c],["__file","index.html.vue"]]);export{k as default};
