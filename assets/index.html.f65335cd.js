import{_ as n,o as s,c as a,d as t}from"./app.12b3c3fb.js";const p={},e=t(`<h1 id="leetcode-66-\u52A0\u4E00" tabindex="-1"><a class="header-anchor" href="#leetcode-66-\u52A0\u4E00" aria-hidden="true">#</a> LeetCode-66 \u52A0\u4E00</h1><h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><p>\u7ED9\u5B9A\u4E00\u4E2A\u7531\u6574\u6570\u7EC4\u6210\u7684\u975E\u7A7A\u6570\u7EC4\u6240\u8868\u793A\u7684\u975E\u8D1F\u6574\u6570\uFF0C\u5728\u8BE5\u6570\u7684\u57FA\u7840\u4E0A\u52A0\u4E00\u3002 \u6700\u9AD8\u4F4D\u6570\u5B57\u5B58\u653E\u5728\u6570\u7EC4\u7684\u9996\u4F4D\uFF0C \u6570\u7EC4\u4E2D\u6BCF\u4E2A\u5143\u7D20\u53EA\u5B58\u50A8\u5355\u4E2A\u6570\u5B57\u3002 \u4F60\u53EF\u4EE5\u5047\u8BBE\u9664\u4E86\u6574\u6570 0 \u4E4B\u5916\uFF0C\u8FD9\u4E2A\u6574\u6570\u4E0D\u4F1A\u4EE5\u96F6\u5F00\u5934\u3002</p><p>\u793A\u4F8B 1:</p><blockquote><p>\u8F93\u5165: [1,2,3]<br> \u8F93\u51FA: [1,2,4]<br> \u89E3\u91CA: \u8F93\u5165\u6570\u7EC4\u8868\u793A\u6570\u5B57 123\u3002</p></blockquote><p>\u793A\u4F8B 2:</p><blockquote><p>\u8F93\u5165: [4,9,9,9]<br> \u8F93\u51FA: [5,0,0,0]<br> \u89E3\u91CA: \u8F93\u5165\u6570\u7EC4\u8868\u793A\u6570\u5B57 5000\u3002</p></blockquote><h2 id="\u89E3\u6CD5\u4E00" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5\u4E00" aria-hidden="true">#</a> \u89E3\u6CD5\u4E00</h2><h3 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>\u5C06\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E00\u4E2A\u5B57\u7B26\u8FDE\u63A5\u6210\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF1B \u7136\u540E\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u6574\u6570\uFF0C\u518D\u5C06\u6570\u5B57\u589E\u52A0 1\uFF1B \u5206\u5272\u6570\u5B57\uFF0C\u7EC4\u6210\u53E6\u4E00\u4E2A\u6570\u7EC4</p><h3 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">plusOne</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> digits<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        num <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> digits<span class="token punctuation">:</span>
           num <span class="token operator">+=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
        num <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>

        ans <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> num<span class="token punctuation">:</span>
            ans<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> ans
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u590D\u6742\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u590D\u6742\u5EA6" aria-hidden="true">#</a> \u590D\u6742\u5EA6</h3><p>\u7A7A\u95F4\uFF1AO(n) \u65F6\u95F4\uFF1AO(n)</p><h2 id="\u89E3\u6CD5\u4E8C" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5\u4E8C" aria-hidden="true">#</a> \u89E3\u6CD5\u4E8C</h2><h3 id="\u601D\u8DEF-1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF-1" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>\u548C\u7B2C\u4E00\u79CD\u601D\u8DEF\u7C7B\u4F3C \u904D\u5386\u6570\u7EC4\uFF0C\u5C06\u6570\u7EC4\u53D8\u6210\u6570\u5B57\u5F62\u5F0F \u65B0\u6570\u5B57\u52A0\u4E00 \u5206\u5272\u6570\u5B57\uFF0C\u7EC4\u6210\u53E6\u4E00\u4E2A\u6570\u7EC4</p><h3 id="\u4EE3\u7801-1" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801-1" aria-hidden="true">#</a> \u4EE3\u7801</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">plusOne</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> digits<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        intNum <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>digits<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            intNum <span class="token operator">=</span> intNum<span class="token operator">*</span><span class="token number">10</span> <span class="token operator">+</span> digits<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        intNum <span class="token operator">+=</span> <span class="token number">1</span>

        res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span>intNum<span class="token punctuation">)</span><span class="token punctuation">:</span>
            res<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> res

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u590D\u6742\u5EA6-1" tabindex="-1"><a class="header-anchor" href="#\u590D\u6742\u5EA6-1" aria-hidden="true">#</a> \u590D\u6742\u5EA6</h3><p>\u7A7A\u95F4\uFF1AO(n) \u65F6\u95F4\uFF1AO(n)</p><h2 id="\u89E3\u6CD5\u4E09" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5\u4E09" aria-hidden="true">#</a> \u89E3\u6CD5\u4E09</h2><h3 id="\u601D\u8DEF-2" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF-2" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>\u6362\u4E2A\u601D\u8DEF\uFF0C\u52A0\u4E00\u65E0\u975E\u4E24\u4E2A\u60C5\u51B5</p><ul><li>\u672B\u4F4D\u4E3A 9 \u9700\u8981\u8FDB\u4F4D</li><li>\u672B\u4F4D\u4E0D\u4E3A 9\uFF0C\u76F4\u63A5\u52A0\u4E00</li></ul><ol><li>\u9996\u5148\u8BBE\u8FB9\u754C\u6761\u4EF6\uFF0C\u82E5\u65E0\u6570\u5B57\u5219\u4E3A\u4E00</li><li>\u672B\u4F4D\u4E3A 9\uFF1A</li></ol><ul><li>\u622A\u53D6\u9664\u6700\u540E\u4E00\u4F4D\u5916\u7684\u6570\u7EC4\uFF0C\u672B\u4F4D\u52A0\u4E00</li><li>\u65B0\u6570\u7EC4\u7ED3\u5C3E\u586B\u96F6</li></ul><ol start="3"><li>\u672B\u4F4D\u4E0D\u4E3A 9\uFF1A</li></ol><p>\u672B\u4F4D\u76F4\u63A5\u52A0\u4E00</p><h3 id="\u4EE3\u7801-2" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801-2" aria-hidden="true">#</a> \u4EE3\u7801</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">plusOne</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> digits<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>digits<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
                digits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token keyword">elif</span> digits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">:</span>
            digits <span class="token operator">=</span> self<span class="token punctuation">.</span>plusOne<span class="token punctuation">(</span>digits<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            digits<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            digits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">return</span> digits

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u597D\u7406\u89E3\u4E9B\uFF0C\u89E3\u91CA\u4E0B\u4EE3\u7801 digits = self.plusOne(digits[:-1]) \u793A\u4F8B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>digits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>
<span class="token comment"># digits = [9, 0, 9]</span>
digits <span class="token operator">=</span> self<span class="token punctuation">.</span>plusOne<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># this returns [9, 1]</span>
<span class="token comment"># digits = [9, 1]</span>
digits<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># digits = [9, 1, 0]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u590D\u6742\u5EA6-2" tabindex="-1"><a class="header-anchor" href="#\u590D\u6742\u5EA6-2" aria-hidden="true">#</a> \u590D\u6742\u5EA6</h3><p>\u65F6\u95F4\uFF1AO(n) \u7A7A\u95F4\uFF1AO(1)</p>`,35),i=[e];function o(c,l){return s(),a("div",null,i)}var r=n(p,[["render",o],["__file","index.html.vue"]]);export{r as default};
