import{_ as n,o as s,c as a,a as t}from"./app.8c6f2f45.js";const e={},p=t(`<h1 id="leetcode-821-\u5B57\u7B26\u7684\u6700\u77ED\u8DDD\u79BB" tabindex="-1"><a class="header-anchor" href="#leetcode-821-\u5B57\u7B26\u7684\u6700\u77ED\u8DDD\u79BB" aria-hidden="true">#</a> LeetCode-821-\u5B57\u7B26\u7684\u6700\u77ED\u8DDD\u79BB</h1><h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><p>\u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32 S \u548C\u4E00\u4E2A\u5B57\u7B26 C\u3002\u8FD4\u56DE\u4E00\u4E2A\u4EE3\u8868\u5B57\u7B26\u4E32 S \u4E2D\u6BCF\u4E2A\u5B57\u7B26\u5230\u5B57\u7B26\u4E32 S \u4E2D\u7684\u5B57\u7B26 C \u7684\u6700\u77ED\u8DDD\u79BB\u7684\u6570\u7EC4\u3002</p><p>\u793A\u4F8B 1:</p><blockquote><p>\u8F93\u5165: S = &quot;loveleetcode&quot;, C = &#39;e&#39;<br> \u8F93\u51FA: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]</p></blockquote><p>\u8BF4\u660E:</p><p>\u5B57\u7B26\u4E32 S \u7684\u957F\u5EA6\u8303\u56F4\u4E3A [1, 10000]\u3002 C \u662F\u4E00\u4E2A\u5355\u5B57\u7B26\uFF0C\u4E14\u4FDD\u8BC1\u662F\u5B57\u7B26\u4E32 S \u91CC\u7684\u5B57\u7B26\u3002 S \u548C C \u4E2D\u7684\u6240\u6709\u5B57\u6BCD\u5747\u4E3A\u5C0F\u5199\u5B57\u6BCD\u3002</p><h2 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h2><ol><li>\u904D\u5386\u6570\u7EC4\uFF0C\u627E\u5230\u7B49\u4E8E C \u7684\u5B57\u7B26\u4E0B\u6807\uFF0C\u8BBE\u7F6E\u4F4D\u79FB\u5750\u6807 pos</li><li>\u904D\u5386\u6570\u7EC4\u4E0B\u6807\uFF1A</li></ol><ul><li>\u4F9D\u6B21\u4E0E pos \u76F8\u51CF\u53D6\u7EDD\u5BF9\u503C\uFF0C\u518D\u4ECE\u4E2D\u9009\u53D6\u6700\u5C0F\u503C\u6DFB\u52A0\u5230 ans</li></ul><h2 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">shortestToChar</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> S<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> C<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        pos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> v <span class="token operator">==</span> C<span class="token punctuation">:</span>
                pos<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
        <span class="token comment">#output\uFF1A\u30103\uFF0C5\uFF0C6\uFF0C11\u3011</span>
        ans <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            ans<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>t <span class="token operator">-</span> i<span class="token punctuation">)</span> <span class="token keyword">for</span> t <span class="token keyword">in</span> pos<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> ans
<span class="token comment">#[3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0, 3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u590D\u6742\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u590D\u6742\u5EA6" aria-hidden="true">#</a> \u590D\u6742\u5EA6</h2><p>\u65F6\u95F4\uFF1AO(nm) \u7A7A\u95F4\uFF1AO(n)</p>`,14),o=[p];function c(i,l){return s(),a("div",null,o)}var r=n(e,[["render",c],["__file","index.html.vue"]]);export{r as default};
